## Application configuration
spring.application.name = nosso-banco-proposals
secret.key.encrypt = ${SECRET_KEY_ENCRYPT:H@McQfTjWnZr4t7w}
server.port=8080

## JPA e DATABASE configuration
spring.datasource.url=jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:proposta}?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
spring.datasource.username=${DATABASE_USER:proposta-user}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.query.timeout = 50

## Feign configuration
feign.client.config.proposalAnalysis.read-timeout=100
feign.client.config.proposalAnalysis.connect-timeout=100

## API URLs
proposal.analysis.host=${PROPOSAL_ANALYSIS_HOST:http://localhost:9999}
credit.card.control.host=${CREDIT_CARD_CONTROL_HOST:http://localhost:8888}

## Spring Actuator configuration
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.application=${APPLICATION_NAME:Proposal Service}
management.metrics.tags.environment=${APPLICATION_ENVIRONMENT:Development}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

## Spring profile
spring.profiles.active=dev


# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name} 
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# Para enviar 10 traces por segundo
# opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}
# True para enviar 100%
# opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true}